{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Elyte Store API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "HealthCheck",
      "description": "Application health check"
    },
    {
      "name": "Users",
      "description": "Operations related to users in the system"
    },
    {
      "name": "Auth",
      "description": "Operations related to user authentication"
    },
    {
      "name": "Products",
      "description": "Information on products templates"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Health check",
        "description": "",
        "responses": {
          "200": {
            "description": "Health check passed"
          }
        }
      }
    },
    "/users/role/{userId}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user role by user ID",
        "description": "Update user roles.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user whose role should be updated."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "ADMIN",
                    "USER"
                  ]
                }
              },
              "required": [
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "User updated successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/ban/{userId}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Ban or restore user by ID",
        "description": "Ban or restore user by userId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to ban / restore."
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "example": {
                  "message": "User banned/restored successfully"
                }
              }
            },
            "description": "User updated successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no user with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "User not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users",
        "description": "Receive all users.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Users retrieved successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "User retrieved successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no user with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "User not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "Delete users.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to delete."
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "example": {
                  "message": "User deleted"
                }
              }
            },
            "description": "User deleted successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "description": "Update of user fields by clerkId.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "12345678901"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Users updated successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password1*"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Email already taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 400,
                  "message": "Email already taken"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password1*"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Incorrect credentials"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              },
              "required": [
                "refreshToken"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-tokens": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh auth tokens",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              },
              "required": [
                "refreshToken"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized",
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Forgot password",
        "description": "An email will be sent to reset password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "johndoe@test.com"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "The reset password token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "Password1*"
                }
              },
              "required": [
                "password"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Password reset failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Password reset failed"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/change-password/{userId}": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Change user password for admin",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user whose password should be updated."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "Password1*"
                }
              },
              "required": [
                "password"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Password updated successfully"
                }
              }
            },
            "description": "Password updated successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/change-password/{userId}": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Change user password",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user whose password should be updated."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string",
                  "example": "Password1*"
                },
                "newPassword": {
                  "type": "string",
                  "example": "Password2*"
                }
              },
              "required": [
                "oldPassword",
                "newPassword"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Password updated successfully"
                }
              }
            },
            "description": "Password updated successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/admin": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products for admin management",
        "description": "",
        "responses": {
          "200": {
            "description": "Products fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/images/{productId}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update product images by product Id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "example": "Product Image"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/deactivate/{productId}": {
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Deactivate or restore product by ID",
        "description": "Deactivate or restore product by productId.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the product to deactivate/restore."
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "example": {
                  "message": "Product deactivated/restored successfully"
                }
              }
            },
            "description": "Product deactivated/restored successfully."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products",
        "description": "",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "_limit",
            "in": "query",
            "description": "Number of products per page.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Brand name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_sort",
            "in": "query",
            "description": "Sort by field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_order",
            "in": "query",
            "description": "Sort order.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Product Title"
                },
                "images": {
                  "type": "string",
                  "example": "Product Images"
                },
                "category": {
                  "type": "string",
                  "example": "Category"
                },
                "description": {
                  "type": "string",
                  "example": "Product Description"
                },
                "price": {
                  "type": "number",
                  "example": 100.25
                },
                "discountPercentage": {
                  "type": "number",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Data validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 400,
                  "message": "Product code already exists"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by Id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          }
        ],
        "responses": {
          "200": {
            "description": "Product fetched.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by Id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted."
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "summary": "Update product by Id",
        "description": "",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "Product Code"
                },
                "UOM": {
                  "type": "string",
                  "example": "Product UOM"
                },
                "image": {
                  "type": "string",
                  "example": "Product Image"
                },
                "category": {
                  "type": "string",
                  "example": "Category"
                },
                "type": {
                  "type": "string",
                  "example": "Product Type"
                },
                "typeES": {
                  "type": "string",
                  "example": "Product Type ES"
                },
                "description": {
                  "type": "string",
                  "example": "Product Description"
                },
                "descriptionES": {
                  "type": "string",
                  "example": "Product Description ES"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "netWeight": {
                  "type": "number",
                  "example": 1000
                },
                "grossWeight": {
                  "type": "number",
                  "example": 1500
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Data validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 400,
                  "message": "Product code already exists"
                }
              }
            }
          },
          "401": {
            "description": "No permission for this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "There is no product with this ID in a database.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/products/schemas/ApiError"
                },
                "example": {
                  "code": 404,
                  "message": "Product not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "category": {
                    "example": "any"
                  },
                  "brand": {
                    "example": "any"
                  },
                  "images": {
                    "example": "any"
                  },
                  "colors": {
                    "example": "any"
                  },
                  "price": {
                    "example": "any"
                  },
                  "discountPercentage": {
                    "example": "any"
                  },
                  "rating": {
                    "example": "any"
                  },
                  "stock": {
                    "example": "any"
                  },
                  "isActive": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ACCESS",
              "REFRESH",
              "RESET_PASSWORD"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "CORPORATE_ADMIN",
              "COUNTRY_ADMIN",
              "SELLER"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "USA",
              "Mexico",
              "Chile"
            ]
          },
          "expires": {
            "type": "string",
            "example": "2020-05-12T16:18:04.793Z"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInJvbGUiOiJTRUxMRVIiLCJpYXQiOjE3MDQ4ODEzMDMsImV4cCI6MTcwNDg4MzEwMywidHlwZSI6IkFDQ0VTUyJ9.sVDix3afwQHQ4aYlKC4mmmaaCLJ5qqlruLLBFhj24X0"
          }
        },
        "required": [
          "type",
          "role",
          "country",
          "expires",
          "token"
        ],
        "xml": {
          "name": "Token"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "jobTitle": {
            "type": "string",
            "example": "Software Engineer"
          },
          "mobilePhone": {
            "type": "string",
            "example": "12345678901"
          },
          "officePhone": {
            "type": "string",
            "example": "12345678901"
          },
          "role": {
            "type": "string",
            "enum": [
              "CORPORATE_ADMIN",
              "COUNTRY_ADMIN",
              "SELLER"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "USD",
              "MXN",
              "CLP"
            ]
          },
          "country": {
            "type": "string",
            "enum": [
              "USA",
              "Mexico",
              "Chile"
            ]
          },
          "pdfNotes": {
            "type": "string",
            "example": "Test Notes"
          },
          "pdfConditions": {
            "type": "string",
            "example": "Test Conditions"
          },
          "pdfFooter": {
            "type": "string",
            "example": "Test Footer"
          },
          "tokens": {
            "type": "array",
            "example": [
              "token1",
              "token2"
            ],
            "items": {
              "type": "string"
            }
          },
          "isBanned": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "jobTitle",
          "mobilePhone",
          "role",
          "currency",
          "country",
          "tokens",
          "isBanned"
        ],
        "xml": {
          "name": "User"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "BP3-4DA"
          },
          "series": {
            "type": "string",
            "example": "BP"
          },
          "postfix": {
            "type": "string",
            "example": "DA"
          },
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "nameES": {
            "type": "string",
            "example": "Product Name ES"
          },
          "type": {
            "type": "string",
            "example": "Product Type"
          },
          "description": {
            "type": "string",
            "example": "Product Description"
          },
          "descriptionES": {
            "type": "string",
            "example": "Product Description ES"
          },
          "subcategory": {
            "type": "string",
            "example": "Product Subcategory"
          },
          "size": {
            "type": "number",
            "example": 0
          },
          "modules": {
            "type": "number",
            "example": 3
          },
          "bases": {
            "type": "number",
            "example": 4
          },
          "angle": {
            "type": "number",
            "example": 0
          },
          "corners": {
            "type": "number",
            "example": 0
          },
          "images": {
            "type": "array",
            "example": [
              "https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"
            ],
            "items": {
              "type": "string"
            }
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "code": {
                  "type": "string",
                  "example": "A1"
                },
                "quantity": {
                  "type": "number",
                  "example": 4
                },
                "component": {
                  "xml": {
                    "name": "component"
                  },
                  "$ref": "#/components/schemas/Component"
                }
              },
              "required": [
                "id",
                "code",
                "quantity",
                "component"
              ]
            }
          },
          "categoryId": {
            "type": "number",
            "example": 1
          },
          "category": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Category Name"
              }
            },
            "required": [
              "name"
            ]
          },
          "createdAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "code",
          "series",
          "name",
          "nameES",
          "type",
          "description",
          "descriptionES",
          "categoryId",
          "category",
          "createdAt",
          "updatedAt",
          "isActive"
        ],
        "xml": {
          "name": "Product"
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "stack": {
            "type": "string",
            "example": "Error stack..."
          }
        },
        "required": [
          "code",
          "message"
        ],
        "xml": {
          "name": "ApiError"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Enter your bearer token in the format **Bearer &lt;token>**"
      }
    }
  }
}